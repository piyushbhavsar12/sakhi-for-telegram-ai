version: '3.3'

services:
  ## ONLY for MAC START
  ## docker rm -f marqo-os; docker run -p 9200:9200 -p 9600:9600 -e "discovery.type=single-node" marqoai/marqo-os:0.0.3-arm
  # marqo-os:   
  #   image: marqoai/marqo-os:0.0.3-arm
  #   ports:
  #     - "9200:9200"
  #     - "9600:9600"
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"      
  #   environment:
  #     discovery.type: single-node
  #   networks:
  #     - activitysakhi-network
  ## ONLY for MAC END

  #docker rm -f marqo-os; docker run -p 9200:9200 -p 9600:9600 -e "discovery.type=single-node" marqoai/marqo-os:0.0.3-arm
  marqo-os:
    image: "marqoai/marqo-os:0.0.3-arm"
    ports:
      - "9200:9200"
      - "9600:9600"
    environment:
      - discovery.type=single-node
    networks:
      - activitysakhi-network      
    volumes:
      - ./marqo-os-data:/usr/share/opensearch/data   
    healthcheck:
      # Note the --insecure to skip verification and the -u admin:admin credentials.
      test: ["CMD-SHELL", "curl -X GET 'https://marqo-os:9200/_cluster/health' --insecure -H 'Content-Type: application/json' -u admin:admin >/dev/null || exit 1"]
      interval: 60s
      timeout: 3s
      retries: 50

  

  marqo:
    image: marqoai/marqo:1.5.1
    ports:
      - "8883:8882"
    container_name: marqoDB
    privileged: true
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      MARQO_MAX_INDEX_FIELDS: 400
      MARQO_MAX_DOC_BYTES: 200000
      MARQO_MAX_RETRIEVABLE_DOCS: 600
      MARQO_MAX_NUMBER_OF_REPLICAS: 2
      MARQO_MODELS_TO_PRELOAD: '["flax-sentence-embeddings/all_datasets_v4_mpnet-base"]'
      ## ONLY for MAC START
      # OPENSEARCH_URL: https://localhost:9200
      ## ONLY for MAC END
    volumes:
      - ./marqo_data:/path/to/marqo/data
    networks:
      - activitysakhi-network

  # activitysakhi:
  #   image: dubea/sakhi-api-service-main-sakhi-api:main
  #   environment:
  #     - LOG_LEVEL=INFO
  #     - TELEMETRY_URL=http://telemetry-service:9001
  #     - TELEMETRY_LOG_ENABLED=false
  #     - OPENAI_API_BASE=
  #     - OPENAI_API_VERSION=
  #     - OPENAI_TYPE=
  #     - OPENAI_API_KEY=
  #     - GPT_MODEL=
  #     - BHASINI_ENDPOINT_URL=
  #     - BHASINI_API_KEY=
  #     - BUCKET_ENDPOINT_URL=
  #     - BUCKET_REGION_NAME=
  #     - BUCKET_NAME=
  #     - BUCKET_SECRET_KEY=
  #     - BUCKET_ACCESS_KEY=
  #     - MARQO_URL=
  #     - ENV=dev
  #     - GCP_CONFIG_PATH=/config/gcp.json
  #     - CONFIG_INI_PATH=/config/config.ini
  #     - TELEMETRY_ENDPOINT_URL=
  #     - TELEMETRY_LOG_ENABLED=false
  #   volumes:
  #     - ./config:/config
  #   ports:
  #     - "8080:8080"
  #   depends_on: 
  #     - marqo
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 3
  #     restart_policy:
  #       condition: on-failure
  #       networks:
  #     - activitysakhi-network

  ##############################################################################
  # Redis
  ##############################################################################
  redis:
    image: redis:7.2.4-alpine
    container_name: redis
    command: redis-server --save 20 1 --loglevel warning # --save 20 1 which instructs the server to save 1 or more writes every 20 seconds to disk in case the server restarts
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data  # Persist data
    # environment:
    #   - REDIS_PASSWORD="password"
    #   - REDIS_ARGS="--requirepass $${REDIS_PASSWORD} --user username on >password ~* allcommands --user default off nopass nocommands"
    networks:
      - activitysakhi-network


volumes:
  #postgres_data:
  redis-data:
  marqo-os-data:

networks:
  activitysakhi-network:
    driver: bridge